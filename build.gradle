plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.owasp.dependencycheck' version '8.4.0'
    id 'com.github.spotbugs' version '6.0.7'
    id 'jacoco'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'odyssey'
version = '0.0.1-SNAPSHOT'

ext {
    snippetsDir = file('build/generated-snippets')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExtensions
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    testImplementation 'com.h2database:h2'

    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    outputs.dir snippetsDir
    systemProperty 'org.springframework.restdocs.json.prettyPrint', 'true'

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/config/**',
                    '**/dto/**',
                    '**/domain/**',
                    '**/*Application*'
            ])
        }))
    }
}

spotbugs {
    ignoreFailures = true
    effort = com.github.spotbugs.snom.Effort.valueOf('MAX')
    reportLevel = com.github.spotbugs.snom.Confidence.valueOf('LOW')
}

spotbugsMain {
    reports {
        html {
            required = true
        }
    }
}

spotbugsTest {
    reports {
        html {
            required = true
        }
    }
}

dependencyCheck {
    format = 'HTML'
    failBuildOnCVSS = 7.0
}

asciidoctor {
    dependsOn test

    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir

    sources {
        include('**/index.adoc', '**/docs/*.adoc')
    }

    baseDirFollowsSourceFile()
}

tasks.register('copyRestDocs', Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyRestDocs
}

sourceSets {
    test {
        resources {
            srcDir 'src/test/resources'
        }
    }
}

tasks.processTestResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named("spotbugsMain") {
    dependsOn(tasks.named("copyRestDocs"))
}